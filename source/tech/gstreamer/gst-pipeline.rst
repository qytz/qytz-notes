GStreamer系列之管道
====================================
管道是带有其自己的bus和clock的高级bin，如果你的程序只包含bin一样的对象，这就是
你想要的。你可以如下创建一个管道对象::

    mypipeline = Gst.Pipeline()

其实管道就是一个容器，你可以把其他对象放进去，然后指定要播放的文件并设置管道
的状态为 ``Gst.State.Playing`` ，这样就会有多媒体流在管道里流到了。

例如，如下的一个音乐播放器的例子，使用了我们自己的mp3解码器代替了上一章中的playbin。
你可以直接使用 ``gst-lanuch-1.0`` 来测试管道::

    $ gst-launch-1.0 filesrc location=ydcyxf.mp3 ! mad ! audioconvert ! alsasink

使用ASCII的图表可以形象地表示上面这行代码::


                                              Gst.Pipeline
                 _____________________________________________________________________
                |                                                                     |
                |    _________       _______       ______________       __________    |
                |   |         |     |       |     |              |     |          |   |
    file.mp3 ->-|---| filesrc |-->--|  mad  |-->--| audioconvert |-->--| alsasink |---|->- Audio Output
                |   |_________|     |_______|     |______________|     |__________|   |
                |                                                                     |
                |_____________________________________________________________________|

以下是python代码的例子：

.. literalinclude:: examples/pipeline.py
    :linenos:
